import{_ as s,c as a,a as n,o as t}from"./app--Vh3dkqs.js";const i={};function l(r,e){return t(),a("div",null,e[0]||(e[0]=[n(`<h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题"><span>问题</span></a></h2><p>红色框框 = 合并冲突产生的 <strong>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD / &gt;&gt;&gt;&gt;&gt;&gt;&gt; 分支</strong> 标记， 现在文件里同时保留了“你本地”和“远程”两份内容，VuePress 解析不了就报错。</p><p><img src="https://www.kimi.com/apiv2-files/sign-obj/kimi-fs%2Ffiles%2Fblob%2F224b5774b276c087a9211fc7e6bad9c4fd1124578fd2f386c5105882a140ff7d?filename=image.png&amp;sig=K-PMyl8n3jAPuYB2afhnpr_qy3ARAm82tCn8BZEUEO0=&amp;t=t" alt=""></p><h2 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法"><span>解决方法</span></a></h2><h3 id="✅-一键回到合并前-硬回退" tabindex="-1"><a class="header-anchor" href="#✅-一键回到合并前-硬回退"><span>✅ 一键回到合并前（硬回退）</span></a></h3><ol><li><strong>查最后一次“干净”提交的哈希</strong></li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> reflog</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>找到 <strong>合并之前</strong> 那一行的哈希（类似 <code>a8b3d12</code>）。</p><ol><li><strong>整库强制回到那个点</strong>（工作区、暂存区一起恢复）</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> reset <span class="token parameter variable">--hard</span> <span class="token operator">&lt;</span>哈希<span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>例：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> reset <span class="token parameter variable">--hard</span> a8b3d12</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li><strong>如果你想</strong>也把远程还原成这个干净状态</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">git</span> push origin main <span class="token parameter variable">--force</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">注意</p><p>远程会被完全覆盖，<strong>单人项目才用</strong>。</p></div><hr><h3 id="🔍-一句话" tabindex="-1"><a class="header-anchor" href="#🔍-一句话"><span>🔍 一句话</span></a></h3><p><strong>“git reflog 找哈希 → git reset --hard 哈希 → 世界瞬间清净。”</strong></p><p>执行完再 <code>npm run dev</code>，红色冲突标记全部消失，博客就能正常跑了。</p>`,19)]))}const d=s(i,[["render",l]]),c=JSON.parse('{"path":"/blogs/frontEnd/Git/githebingchongtu.html","title":"Git合并冲突","lang":"en-US","frontmatter":{"title":"Git合并冲突","date":"2024-10-12T00:00:00.000Z","categories":["frontEnd"],"tags":["Git"]},"headers":[{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":2,"title":"解决方法","slug":"解决方法","link":"#解决方法","children":[{"level":3,"title":"✅ 一键回到合并前（硬回退）","slug":"✅-一键回到合并前-硬回退","link":"#✅-一键回到合并前-硬回退","children":[]},{"level":3,"title":"🔍 一句话","slug":"🔍-一句话","link":"#🔍-一句话","children":[]}]}],"git":{"createdTime":1760266988000,"updatedTime":1760266988000,"contributors":[{"name":"doyoudo","email":"1533924921@qq.com","commits":1}]},"filePathRelative":"blogs/frontEnd/Git/git合并冲突.md"}');export{d as comp,c as data};
